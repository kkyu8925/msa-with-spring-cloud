server:
  port: 8000

eureka:
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8761/eureka

token:
  secret: user_token

spring:
  application:
    name: apigateway-service
  cloud:
    gateway:
      routes:
        #        - id: user-service
        #          uri: lb://USER-SERVICE # Load balancer, 유레카 서버에서 찾음
        #          predicates:
        #            - Path=/user-service/**
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/login
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/users
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/actuator/**
            - Method=GET,POST
          filters:
            - RemoveRequestHeader=Cookie
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - AuthorizationHeaderFilter
        - id: catalog-service
          uri: lb://CATALOG-SERVICE # Load balancer, 유레카 서버에서 찾음
          predicates:
            - Path=/catalog-service/**
        - id: order-service
          uri: lb://ORDER-SERVICE # Load balancer, 유레카 서버에서 찾음
          predicates:
            - Path=/order-service/**
#      default-filters: # Global filter
#        - name: GlobalFilter
#          args:
#            baseMessage: Spring Cloud Gateway Global Filter
#            preLogger: true
#            postLogger: true
#        - id: second-service
#          uri: lb://SECOND-SERVICE # 유레카 서버에서 찾음
#          predicates:
#            - Path=/second-service/**
#          filters:
#            - name: CustomFilter
#            - name: LoggingFilter
#              args:
#                baseMessage: LoggingFilter
#                preLogger: true
#                postLogger: true
#            - AddRequestHeader=second-request, second-request-header
#            - AddResponseHeader=second-response, second-response-header
#            - CustomFilter